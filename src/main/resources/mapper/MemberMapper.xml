<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team_ingterior.ingterior.member.mapper.MemberMapper">
    
    <select id="getMemberResourceByMemberId" parameterType="integer" resultType="memberResourceResponseDTO">
        SELECT
            m.member_code                       AS memberCode
            ,m.status = 2                       AS isSubscribed
            ,count(c.construction_id)           AS constructionCount
        FROM member m
        LEFT JOIN construction c on m.member_id = c.creator_id
        WHERE m.member_id = #{memberId}
        And m.status != 0
        GROUP BY 1,2
    </select>

    <select id="getMemberByEmailAndPlatform" parameterType="oAuth2UserInfo" resultType="memberDTO">
        SELECT
            member_id AS memberId,
            email AS email,
            name AS name,
            platform AS platform,
            member_code AS memberCode,
            img_url AS imgUrl
        FROM member m
        WHERE m.email = #{email} 
        AND platform = #{platform}
        AND status = 1
    </select>

    <select id="insertUserByInfo" parameterType="memberDTO">
        INSERT INTO member(
            member_id,
            platform,
            name,
            email,
            member_code,
            img_url,
            reg_date,
            status
        )SELECT
            nextval('member_id_seq'),
            #{platform},
            #{name},
            #{email},
            #{memberCode},
            #{imgUrl},
            now(),
            1
    </select>

    <select id="countMembersByPlatform" parameterType="oAuth2PlatFormEnum" resultType="integer">
        SELECT count(1)
        FROM member WHERE platform = #{platform}
    </select>

    <select id="getMemberByRefreshToken" parameterType="String" resultType="memberDTO">
        SELECT 
            member_id       as memberId,
            email           as email,
            name            as name,
            platform        as platform,
            member_code      as memberCode,
            img_url         as imgUrl
        FROM member
        WHERE refresh_token = #{refreshToken}
    </select>

    <select id="updateMemberProfile" parameterType="memberDTO">
        UPDATE member SET
            img_url = #{imgUrl}
            ,name = #{name}
        WHERE member_id = #{memberId}
    </select>

    <select id="updateRefreshToken" parameterType="updateRefreshTokenDTO">
        UPDATE member SET
            refresh_token = #{refreshToken}
        WHERE member_id = #{memberId}
        AND status != 0
    </select>

    <select id="deleteMember" parameterType="integer">
        UPDATE member SET
            status = 0
        WHERE member_id = #{memberId}
        AND status = 1
    </select>

</mapper>